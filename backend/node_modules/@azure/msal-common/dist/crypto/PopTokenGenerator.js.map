{"version":3,"file":"PopTokenGenerator.js","sources":["../../src/crypto/PopTokenGenerator.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICrypto } from \"./ICrypto\";\nimport { AuthToken } from \"../account/AuthToken\";\nimport { TokenClaims } from \"../account/TokenClaims\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { UrlString } from \"../url/UrlString\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\n\n/**\n * See eSTS docs for more info.\n * - A kid element, with the value containing an RFC 7638-compliant JWK thumbprint that is base64 encoded.\n * -  xms_ksl element, representing the storage location of the key's secret component on the client device. One of two values:\n *      - sw: software storage\n *      - uhw: hardware storage\n */\ntype ReqCnf = {\n    kid: string;\n    xms_ksl: KeyLocation;\n};\n\nenum KeyLocation {\n    SW = \"sw\",\n    UHW = \"uhw\"\n}\n\nexport class PopTokenGenerator {\n\n    private cryptoUtils: ICrypto;\n\n    constructor(cryptoUtils: ICrypto) {\n        this.cryptoUtils = cryptoUtils;\n    }\n\n    async generateCnf(request: BaseAuthRequest): Promise<string> {\n        const kidThumbprint = await this.cryptoUtils.getPublicKeyThumbprint(request);\n        const reqCnf: ReqCnf = {\n            kid: kidThumbprint,\n            xms_ksl: KeyLocation.SW\n        };\n        return this.cryptoUtils.base64Encode(JSON.stringify(reqCnf));\n    }\n\n    async signPopToken(accessToken: string, request: BaseAuthRequest): Promise<string> {\n        const tokenClaims: TokenClaims | null = AuthToken.extractTokenClaims(accessToken, this.cryptoUtils);\n\n        // Deconstruct request to extract SHR parameters\n        const { resourceRequestMethod, resourceRequestUri, shrClaims } = request;\n\n        const resourceUrlString = (resourceRequestUri) ? new UrlString(resourceRequestUri) : undefined;\n        const resourceUrlComponents = resourceUrlString?.getUrlComponents();\n\n        if (!tokenClaims?.cnf?.kid) {\n            throw ClientAuthError.createTokenClaimsRequiredError();\n        }\n\n        return await this.cryptoUtils.signJwt({\n            at: accessToken,\n            ts: TimeUtils.nowSeconds(),\n            m: resourceRequestMethod?.toUpperCase(),\n            u: resourceUrlComponents?.HostNameAndPort,\n            nonce: this.cryptoUtils.createNewGuid(),\n            p: resourceUrlComponents?.AbsolutePath,\n            q: (resourceUrlComponents?.QueryString) ? [[], resourceUrlComponents.QueryString] : undefined,\n            client_claims: shrClaims || undefined\n        }, tokenClaims.cnf.kid);\n    }\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;;;;AAyBA,IAAK,WAGJ;AAHD,WAAK,WAAW;IACZ,wBAAS,CAAA;IACT,0BAAW,CAAA;AACf,CAAC,EAHI,WAAW,KAAX,WAAW,QAGf;;IAMG,2BAAY,WAAoB;QAC5B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAClC;IAEK,uCAAW,GAAjB,UAAkB,OAAwB;;;;;4BAChB,qBAAM,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,OAAO,CAAC,EAAA;;wBAAtE,aAAa,GAAG,SAAsD;wBACtE,MAAM,GAAW;4BACnB,GAAG,EAAE,aAAa;4BAClB,OAAO,EAAE,WAAW,CAAC,EAAE;yBAC1B,CAAC;wBACF,sBAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAC;;;;KAChE;IAEK,wCAAY,GAAlB,UAAmB,WAAmB,EAAE,OAAwB;;;;;;;wBACtD,WAAW,GAAuB,SAAS,CAAC,kBAAkB,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;wBAG5F,qBAAqB,GAAoC,OAAO,sBAA3C,EAAE,kBAAkB,GAAgB,OAAO,mBAAvB,EAAE,SAAS,GAAK,OAAO,UAAZ,CAAa;wBAEnE,iBAAiB,GAAG,CAAC,kBAAkB,IAAI,IAAI,SAAS,CAAC,kBAAkB,CAAC,GAAG,SAAS,CAAC;wBACzF,qBAAqB,GAAG,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,gBAAgB,EAAE,CAAC;wBAEpE,IAAI,QAAC,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,0CAAE,GAAG,CAAA,EAAE;4BACxB,MAAM,eAAe,CAAC,8BAA8B,EAAE,CAAC;yBAC1D;wBAEM,qBAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;gCAClC,EAAE,EAAE,WAAW;gCACf,EAAE,EAAE,SAAS,CAAC,UAAU,EAAE;gCAC1B,CAAC,EAAE,qBAAqB,aAArB,qBAAqB,uBAArB,qBAAqB,CAAE,WAAW,EAAE;gCACvC,CAAC,EAAE,qBAAqB,aAArB,qBAAqB,uBAArB,qBAAqB,CAAE,eAAe;gCACzC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;gCACvC,CAAC,EAAE,qBAAqB,aAArB,qBAAqB,uBAArB,qBAAqB,CAAE,YAAY;gCACtC,CAAC,EAAE,CAAC,qBAAqB,aAArB,qBAAqB,uBAArB,qBAAqB,CAAE,WAAW,IAAI,CAAC,EAAE,EAAE,qBAAqB,CAAC,WAAW,CAAC,GAAG,SAAS;gCAC7F,aAAa,EAAE,SAAS,IAAI,SAAS;6BACxC,EAAE,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,EAAA;4BATvB,sBAAO,SASgB,EAAC;;;;KAC3B;IACL,wBAAC;AAAD,CAAC;;;;"}